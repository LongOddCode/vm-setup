name: CD

on:
    push:
        tags:
            - "*"

jobs:
    integration-test:
        name: Integration test on (${{ matrix.os }} node ${{ matrix.node-version }})

        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [14]

        runs-on: ${{ matrix.os }}

        steps:
            - name: checkout
              uses: actions/checkout@v2

            - id: tagName
              uses: olegtarasov/get-tag@v2.1
              with:
                  tagRegex: '^((0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)))\+(?<path>.[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*)$'

            - name: validation and set params
              run: |
                  if [ -z "${{ steps.tagName.outputs.path }}" ]; then
                    echo "emply path"
                    exit;
                  fi;
                  if [ -z "${{ steps.tagName.outputs.tag }}" ]; then
                    echo "emply tag"
                    exit;
                  fi;

                  find="."
                  replace="/"
                  originalPath=${{ steps.tagName.outputs.path }}
                  targetPackagePath=${originalPath//$find/$replace}

                  if [ ! -d "$targetPackagePath" ]; then
                    echo "path doesn't exist"
                  fi;

                  echo "targetPackagePath=${targetPackagePath}" >> $GITHUB_ENV
                  echo "targetPackageVersion=${{ steps.tagName.outputs.tag }}" >> $GITHUB_ENV

            - name: Setup node
              uses: actions/setup-node@v2.1.2
              with:
                  node-version: ${{ matrix.node-version }}

            - name: link integrated package
              working-directory: ${{ env.targetPackagePath}}
              run: |
                  targetPackageName=$(cat package.json \
                    | grep name \
                    | head -1 \
                    | awk -F: '{ print $2 }' \
                    | sed 's/[",]//g' \
                    | tr -d '[[:space:]]')

                  echo "targetPackageName=${targetPackageName}" >> $GITHUB_ENV
                  npm install && npm link

            - name: run integration tests
              working-directory: tests
              run: |
                  npm link ${{ env.targetPackageName }}

            - name: release new package
              run: |
                  echo ""
